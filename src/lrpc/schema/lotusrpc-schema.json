{
  "$defs": {
    "cppid": {
      "type": "string",
      "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
      "description": "A valid C++ identifier"
    },
    "uint8": {
      "type": "integer",
      "description": "Unsigned 8-bit integer (0-255)",
      "minimum": 0,
      "maximum": 255
    },
    "service_id": {
      "type": "integer",
      "description": "Service ID (0-254)",
      "minimum": 0,
      "maximum": 254
    },
    "enum_field": {
      "type": "object",
      "description": "Enumeration field consisting of a name and an optional ID",
      "additionalProperties": false,
      "required": [ "name"],
      "properties": {
        "name": { "$ref": "#/$defs/cppid"},
        "id": { "$ref": "#/$defs/uint8"}
      }
    },
    "enum_decl":{
      "type": "object",
      "description": "An enum declaration",
      "required": ["name", "fields"],
      "additionalProperties": false,
      "properties": {
        "name": { "$ref": "#/$defs/cppid" },
        "fields": {
          "type": "array", "minItems": 1, "maxItems": 256, "description": "List of enum fields or names. IDs are assigned automatically if not specified",
          "items": { "oneOf": [
              { "$ref": "#/$defs/cppid" },
              { "$ref": "#/$defs/enum_field" }
            ]
          }
        },
        "external": {"type": "string", "description": "Header file containing the definition of the enum"},
        "external_namespace": {"type": "string", "description": "Namespace in which the external enum is declared"}
      }
    },
    "var_decl": {
      "type": "object",
      "description": "Variable declaration with name and type. Specifying an integer value (>1) for 'count' makes it an array of the specified type. Specifiying a '?' makes it an optional of the specified type. Type can be any of the C++ standard types (u)intx_t, float, double or bool. It can also be 'string_x' for a fixed size string or 'string' for a variable size string. Finally, it can be any custom struct or enum defined in the specification",
      "additionalProperties": false,
      "required": [ "name", "type" ],
      "properties": {
        "name": { "$ref": "#/$defs/cppid" },
        "type": {
          "oneOf": [
            {"enum": ["uint8_t", "int8_t", "uint16_t", "int16_t", "uint32_t", "int32_t", "uint64_t", "int64_t", "float", "double", "bool", "string"]},
            {"type": "string", "pattern": "^string_(0*[1-9][0-9]*)$"},
            {"type": "string", "pattern": "^@[a-zA-Z_][a-zA-Z0-9_]*$"}
          ]
        },
        "count": {
          "oneOf" : [
            {"type": "integer", "minimum": 1 },
            {"const": "?"}
          ]
        }
      }
    },
    "struct_decl":{
      "type": "object",
      "description": "A struct declaration",
      "required": [ "name", "fields" ],
      "additionalProperties": false,
      "properties": {
        "name": { "$ref": "#/$defs/cppid" },
        "fields": {"type": "array", "minItems": 1, "items": { "$ref": "#/$defs/var_decl" }, "description": "List of struct fields"
        },
        "external": {"type": "string", "description": "Header file containing the definition of the struct"},
        "external_namespace": {"type": "string", "description": "Namespace in which the external struct is declared"}
      }
    },
    "const_decl":{
      "type": "object",
      "description": "A constant declaration",
      "required": [ "name",  "value" ],
      "additionalProperties": false,
      "properties": {
        "name": { "$ref": "#/$defs/cppid" },
        "value": { "type": [ "number", "boolean", "string" ]},
        "cppType": {"enum": ["uint8_t", "int8_t", "uint16_t", "int16_t", "uint32_t", "int32_t", "uint64_t", "int64_t", "float", "double", "bool", "string"]}
      }
    },
    "function_decl":{
      "type": "object",
      "required": ["name"],
      "additionalProperties": false,
      "properties": {
        "name": { "$ref": "#/$defs/cppid" },
        "id": { "$ref": "#/$defs/uint8" },
        "params": { "type": "array", "minItems": 1, "items": { "$ref": "#/$defs/var_decl" }, "description": "List of function parameters"},
        "returns": {"type": "array", "minItems": 1, "items": { "$ref": "#/$defs/var_decl" }, "description": "List of function returns"}
      }
    },
    "service_decl": {
      "type": "object",
      "required": [ "name", "functions"],
      "additionalProperties": false,
      "properties": {
        "name": { "$ref": "#/$defs/cppid" },
        "id": { "$ref": "#/$defs/service_id" },
        "functions": { "type": "array", "minItems": 1, "maxItems": 256, "items": { "$ref": "#/$defs/function_decl" }, "description": "List of functions in the service (max 256 functions)" }
      }
    }
  },

  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Lotus RPC",
  "description": "JSON Schema for Lotus RPC, a RPC code generation tool",
  "type": "object",
  "additionalProperties": true,
  "required": ["name", "services"],
  "properties": {
    "name": {
      "$ref": "#/$defs/cppid",
      "description": "Name of the RPC"
    },
    "version": {
      "type": "string",
      "description": "Version of the definition file"
    },
    "namespace": {
      "$ref": "#/$defs/cppid",
      "description": "C++ namespace to be generate code in"
    },
    "rx_buffer_size": {
      "type": "integer",
      "minimum": 1,
      "description": "Size of the server side receive buffer in bytes"
    },
    "tx_buffer_size": {
      "type": "integer",
      "minimum": 1,
      "description": "Size of the server side transmit buffer in bytes"
    },
    "services": {
      "type": "array",
      "minItems": 1,
      "maxItems": 256,
      "items": { "$ref": "#/$defs/service_decl" },
      "description": "A list of services (max 256 services)"
    },
    "structs":{
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/struct_decl" },
      "description": "A list of custom structs"
    },
    "enums": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/enum_decl" },
      "description": "A list of custom enums"
    },
    "constants": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/const_decl" },
      "description": "A list of custom constants"
    }
  }
}